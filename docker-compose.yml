version: '3.8'

# --- NETWORKS ---
networks:
  foe_rbs_network:
    driver: bridge

# --- SERVICES ---
services: # <--- This is the correct, singular 'services' key.

  # 1. POSTGRESQL DATABASES (One for each service with data)
  # ----------------------------------------------------------------

  db_auth:
    image: postgres:15-alpine
    container_name: foe_rbs_db_auth
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - auth_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Host: 5432 is used by auth-service
    networks:
      - foe_rbs_network

  db_resource:
    image: postgres:15-alpine
    container_name: foe_rbs_db_resource
    environment:
      POSTGRES_DB: resource_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - resource_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Host: 5433 is used by resource-service
    networks:
      - foe_rbs_network

  db_booking:
    image: postgres:15-alpine
    container_name: foe_rbs_db_booking
    environment:
      POSTGRES_DB: booking_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - booking_data:/var/lib/postgresql/data
    ports:
      - "5434:5432" # Host: 5434 is used by booking-service
    networks:
      - foe_rbs_network


  # 4. API GATEWAY (Fixed to use Laravel Artisan Serve)
  # ----------------------------------------------------------------

  api_gateway:
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    container_name: foe_rbs_api_gateway
    volumes:
      - ./api-gateway:/var/www/html
    ports:
      # Map host 8000 to container 8000 for Artisan server
      - "8000:8000"
    networks:
      - foe_rbs_network
    depends_on:
      - db_auth
      - db_resource
      - db_booking
      - auth_service
      - booking_service
      - resource_service
    restart: unless-stopped
    # Use Laravel's built-in server for development on port 8000
    command: php artisan serve --host=0.0.0.0 --port=8000


  # 5. FRONTEND (Vue.js Development)
  # ----------------------------------------------------------------

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile.dev
    container_name: foe_rbs_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - foe_rbs_network
    environment:
      VITE_API_BASE_URL: http://localhost:8000/api
    restart: unless-stopped


  # 6-8. MICROSERVICES (The backend logic - PHP-FPM containers)
  # ----------------------------------------------------------------

  auth_service:
    build:
      context: ./services/auth-service/
      dockerfile: Dockerfile
    container_name: foe_rbs_auth_service
    volumes:
      - ./services/auth-service:/var/www/html
    environment:
      DB_HOST: db_auth
      DB_PORT: 5432
      DB_DATABASE: auth_db
    networks:
      - foe_rbs_network
    depends_on:
      - db_auth
    restart: unless-stopped

  booking_service:
    build:
      context: ./services/booking-service/
      dockerfile: Dockerfile
    container_name: foe_rbs_booking_service
    volumes:
      - ./services/booking-service:/var/www/html
    environment:
      DB_HOST: db_booking
      DB_PORT: 5432
      DB_DATABASE: booking_db
    networks:
      - foe_rbs_network
    depends_on:
      - db_booking
    restart: unless-stopped

  resource_service:
    build:
      context: ./services/resource-service/
      dockerfile: Dockerfile
    container_name: foe_rbs_resource_service
    volumes:
      - ./services/resource-service:/var/www/html
    environment:
      DB_HOST: db_resource
      DB_PORT: 5432
      DB_DATABASE: resource_db
    networks:
      - foe_rbs_network
    depends_on:
      - db_resource
    restart: unless-stopped

# --- VOLUMES (Data Persistence) ---
volumes:
  auth_data:
  resource_data:
  booking_data: